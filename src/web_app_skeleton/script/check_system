#!/usr/bin/env bash

BOLD_RED_COLOR="\e[1m\e[31m"

# Prints error and exit.
# example:
#   print_error "Redis is not running. Run it with some_command"
print_error() {
    printf "${BOLD_RED_COLOR}There is a problem with your system setup:\n\n   ${BOLD_RED_COLOR}$1 \n\n"
    exit 1
}

# Use this script to add any processes required to boot your application.
# A `print_error` function is provided as a helpful way to display a custom
# error message, and exit the script when a process fails, or is missing.
#
# A few examples might be:
#   * `lucky db.verify_connection` to test postgres can be connected
#   * Checking for elasticsearch, redis, or any other process is booted first
#   * Booting additional processes for things like mail, background jobs, etc...
#     should go in your Procfile.dev.

lucky db.verify_connection
if [ $? -ne 0 ]  # Check the exit_code of the previous task. If not equal to 0, then print_error
then
  print_error "Postgres does not seem to be running. Be sure you can connect."
fi



# Return $SHELL if no error is raised to allow the process runner to continue.
$SHELL
