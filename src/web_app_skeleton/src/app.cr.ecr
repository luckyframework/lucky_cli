require "./shards"

# Load .env file before any other config or app code
Dotenv.load

<%- if browser? -%>
# Load the asset manifest in public/mix-manifest.json
Lucky::AssetHelpers.load_manifest

<%- end -%>
require "./models/base_model"
require "./models/mixins/**"
require "./models/**"
require "./queries/mixins/**"
require "./queries/**"
require "./forms/mixins/**"
require "./forms/**"
require "./serializers/**"
require "./emails/base_email"
require "./emails/**"
require "./actions/mixins/**"
require "./actions/**"
<%- if browser? -%>
require "./components/base_component"
require "./components/**"
require "./pages/**"
<%- end -%>
require "../config/env"
require "../config/**"
require "../db/migrations/**"

class App < Lucky::BaseApp
  def middleware
    [
      Lucky::HttpMethodOverrideHandler.new,
      Lucky::LogHandler.new,
      <%- if browser? -%>
      Lucky::SessionHandler.new,
      Lucky::FlashHandler.new,
      <%- else %>
      # Disabled in API mode, but can be enabled if you need them:
      # Lucky::SessionHandler.new,
      # Lucky::FlashHandler.new,
      <%- end -%>
      Lucky::ErrorHandler.new(action: Errors::Show),
      Lucky::RouteHandler.new,
      <%- if browser? -%>
      Lucky::StaticFileHandler.new("./public", false),
      <%- else %>
      # Disabled in API mode:
      # Lucky::StaticFileHandler.new("./public", false),
      <%- end -%>
      Lucky::RouteNotFoundHandler.new,
    ]
  end

  def protocol
    "http"
  end

  def listen
    # Learn about bind_tcp: https://tinyurl.com/bind-tcp-docs
    server.bind_tcp(host, port, reuse_port: false)
    server.listen
  end
end
