def database_url_credentials
  Avram::Credentials.parse?(ENV["DATABASE_URL"]?)
end

def database
  "<%= crystal_project_name %>_#{Lucky::Env.name}"
end

def hostname
  database_url_credentials.try(&.hostname) || ENV["DB_HOST"]? || "localhost"
end

def port
  database_url_credentials.try(&.port) || ENV["DB_PORT"]?.try(&.to_i) || 5432
end

# Some common usernames are "postgres", "root", or your system username (run 'whoami')
def username
  database_url_credentials.try(&.username) || ENV["DB_USERNAME"]? || "postgres"
end

# Some Postgres installations require no password. Use "" if that is the case.
def password
  database_url_credentials.try(&.password) || ENV["DB_PASSWORD"]? || "postgres"
end

AppDatabase.configure do |settings|
  if Lucky::Env.production?
    settings.credentials = Avram::Credentials.parse(ENV["DATABASE_URL"])
  else
    settings.credentials = Avram::Credentials.new(
      database: database,
      hostname: hostname,
      port: port,
      username: username,
      password: password
    )
  end
end

Avram.configure do |settings|
  settings.database_to_migrate = AppDatabase

  # In production, allow lazy loading (N+1).
  # In development and test, raise an error if you forget to preload associations
  settings.lazy_load_enabled = Lucky::Env.production?
end
