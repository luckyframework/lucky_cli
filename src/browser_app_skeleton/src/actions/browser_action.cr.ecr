abstract class BrowserAction < Lucky::Action
  include Lucky::ProtectFromForgery
  accepted_formats [:html, :json], default: :html
  <%- if generate_auth? -%>

  # This module provides current_user, sign_in, and sign_out methods
  include Authentic::ActionHelpers(User)

  # When testing you can skip sign in pages by using `visit` with the `as` param
  #
  #   flow.visit Me::Show, as: UserBox.create
  #
  # This makes tests faster since it doesn't need to load and fill out the form.
  include Auth::TestBackdoor

  # By default all actions that inherit 'BrowserAction' require sign in.
  #
  # You can remove the 'include Auth::RequireSignIn' below to allow anyone to
  # access actions that inherit from 'BrowserAction' or you can
  # 'include Auth::AllowGuests' in individual actions to skip sign in.
  #
  # Learn more at: https://luckyframework.org/guides/authentication/browser
  include Auth::RequireSignIn

  # `expose` means that `current_user` will be passed to pages automatically.
  #
  # In default Lucky apps, the `MainLayout` declares it `needs current_user : User`
  # so that any page that inherits from MainLayout can use the `current_user`
  #
  # Learn more at: https://luckyframework.org/guides/frontend/rendering-html#sharing-data-used-by-all-pages
  expose current_user

  # This method tells Authentic how to find the current user
  private def find_current_user(id) : User?
    UserQuery.new.id(id).first?
  end
  <%- end -%>
end
