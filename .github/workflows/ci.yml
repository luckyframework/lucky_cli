name: Lucky CLI CI

on:
  push:
    branches: [master]
  pull_request:
    branches: "*"

jobs:
  check_format:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:0.35.1
    steps:
      - uses: actions/checkout@v2
      - name: Install shards
        run: shards install
      - name: Format
        run: crystal tool format --check
      - name: Crystal Ameba Linter
        run: ./bin/ameba

  specs:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:0.35.1
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get -yqq install libpq-dev postgresql-client
      - uses: actions/checkout@v2
      - name: Install Chromedriver
        run: apt-get -yqq install chromium-chromedriver
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install yarn
        run: npm install -g yarn
      # This is needed in order to use shards overrides
      - name: Install shards v0.12.0
        run: |
          git clone https://github.com/crystal-lang/shards.git
          cd shards
          git checkout v0.12.0
          make CRFLAGS=--release
          cp bin/shards /usr/local/bin
      - name: Run setup script
        run: ./script/setup
      - name: Install Lucky CLI
        run: |
          crystal build src/lucky.cr --no-debug --release
          cp lucky /usr/local/bin
      - name: Cache Crystal
        uses: actions/cache@v2
        with:
          path: ~/.cache/crystal
          key: ${{ runner.os }}-crystal
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Run tests
        run: |
          export SHARDS_OVERRIDE="$(pwd)/shard.override.yml"
          crystal spec
        env:
          DB_HOST: postgres
          LUCKY_ENV: test
